#! /bin/bash

usage() {
	cat <<EOF

Usage: $0 [OPTION]... target-FQDN

Creates a DomU using the following parameters (passed through to make-domu):

********************************************************************************
  -2 FSSIZE       Create a filesystem this large (in GiB)
  -4 a.b.c.d/p    IP address/prefix (can be given multiple times)
  -c VM_CPUS      Allocate this many CPUs for the VM
  -k "key"        [OPT] SSH key
  -m VM_MEM       Allocate this much memory for the VM (in MiB)
  -P PARAMS_FILE  Parameters file from init-params (for this Dom0).
  -w SWAP_MUL     [OPT] Use this amount of swap (multiplier to VM_MEM)
  -h              Usage (this information)
  -i              Usage: make-domu
********************************************************************************

See: make-domu
See: init-params

EOF
	exit 1
}

MAKE_DOMU="make-domu"

FSTYPE=ext3
unset FORCE_INIT
while getopts "2:4:c:fhik:m:P:w:" OPT ; do
	case "$OPT" in
		2) FSSIZE="$OPTARG";;
		4) XLFS_HOST_IPS="${XLFS_HOST_IPS} -4 ${OPTARG}";;
		c) VIRT_CPUS="$OPTARG";;
		f) FORCE_INIT=1;;
		m) VIRT_MEM="$OPTARG";;
		P) DOMU_DEFAULT_CONF="$OPTARG";;
		h) usage;;
		i) ./${MAKE_DOMU} -h;;
		*) true;;
	esac
done
shift $(($OPTIND - 1))

DOMU_HOST=$1

if [ -z "$DOMU_HOST" ] ; then
	echo "No DomU host specified; aborting."
	exit 1
fi

echo "================================================"
echo "Creating DomU [ $DOMU_HOST ]..."
echo "================================================"

SNAP="/lfs-snapshots/current"

#
# NOTE! - This is different from the make-domu default, b/c make-domu makes
#         the safest low-level assumptions, and ext3 does not cause a TSC_MODE
#         problem like ext4--which requires using a different TSC_MODE.
#         However, we use it here, and allow make-domu to choose the correct
#         TSC_MODE.
#
DEFAULT_FSTYPE=ext4


if [ -z $DOMU_DEFAULT_CONF ] ; then
	echo "No PARAMS_FILE (-p) specified; aborting."
	exit 1
fi

if [ -z $VIRT_CPUS ] ; then
	echo "No vCPU count specified; aborting."
	exit 1
fi

if [ ! -f $DOMU_DEFAULT_CONF ] ; then
	echo "PARAMS_FILE [ $DOMU_DEFAULT_CONF ] does not exist; aborting."
	exit 1
fi

. $DOMU_DEFAULT_CONF

FSTYPE=$(echo $XLFS_VOL_GROUP_SPEC | grep :)
if [ 0 -ne $? ] ; then
	FSTYPE=$DEFAULT_FSTYPE
	XLFS_VOL_GROUP_SPEC="${XLFS_VOL_GROUP_SPEC}:${FSTYPE}"
fi

DEFAULTS="\
-f \
${XLFS_HOST_IPS} \
-c $VIRT_CPUS \
-m $VIRT_MEM \
-2 ${FSSIZE} \
-s $SNAP \
-g $XLFS_HOST_GW \
-a $XLFS_TARGET_LANG \
-z $XLFS_TARGET_TZ \
-j $VIRT_CPUS \
-v $XLFS_VOL_GROUP_SPEC \
-d $XLFS_DNS_SERVERS"

if [ -n "$FORCE_INIT" ] ; then
	DEFAULTS="$DEFAULTS -f"
fi

DEFAULTS=$(echo $DEFAULTS | tr '\n' ' ')

which vgdisplay > /dev/null 2>&1
if [ 0 -eq $? ] ; then



	./make-domu -k "$XLFS_SSH_PUBKEY" $DEFAULTS $@



else
	echo "Calling make-domu..."
	echo "  with SSH key [$XLFS_SSH_PUBKEY]"
	echo "  with params  [ $DEFAULTS ]"
	echo "  and args     [ $@ ]"
	echo "Done."
fi
